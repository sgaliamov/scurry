version: build.{build}

branches:
  only:
    - master

skip_branch_with_pr: true

image: Visual Studio 2019

environment:
  OpenCoverToken:
    secure: rJrOmfdpmHx8EdfB7nBpijgy1H9vGRXi8jARISWwUrXeZGxTiEnHmr1c2e6BARni

before_build:
- pwsh: gitversion /l console /output buildserver /verbosity quiet

dotnet_csproj:
  patch: true
  file: SCurry\SCurry.csproj
  version: $(GitVersion_NuGetVersion)
  assembly_version: $(GitVersion_MajorMinorPatch)
  file_version: $(GitVersion_MajorMinorPatch)
  informational_version: $(GitVersion_InformationalVersion)

build_script:
- pwsh: |
    if ($env:APPVEYOR_REPO_TAG -eq $false) {
        $env:CONFIGURATION = "debug"
    } else {
        $env:CONFIGURATION = "release"
    }
    .\scripts\build.ps1 -c $env:CONFIGURATION

test_script:
- pwsh: |
    Get-ChildItem Env: | Sort Name
    if ($env:APPVEYOR_REPO_TAG -eq $true) {
        nuget install OpenCover -Verbosity quiet -Version 4.7.922
        Invoke-WebRequest -Uri 'https://codecov.io/bash' -OutFile codecov.sh
        Get-ChildItem .\**\*.Tests.csproj -Recurse | ForEach-Object {
            .\OpenCover.4.7.922\tools\OpenCover.Console.exe `
                -register:user `
                -target:"C:\Program Files\dotnet\dotnet.exe" `
                -targetargs:"test $_ --no-restore -c debug" `
                -output:"coverage.xml" `
                -returntargetcode
            if (!$?) {
                throw "`nTests for $_ failed."
            }
            cat coverage.xml
            bash codecov.sh -f "coverage.xml" -t $env:OpenCoverToken
        }
    } else {
        Get-ChildItem .\**\*.Tests.csproj -Recurse | ForEach-Object {
            dotnet test $_ --no-build -c $env:CONFIGURATION
        } 
    }

before_deploy:
- pwsh: |
    dotnet pack --include-source --include-symbols --no-build --no-dependencies -o .\publish
    Get-ChildItem ".\**\*.nupkg" -Recurse | ForEach-Object {
        Push-AppveyorArtifact $_.FullName -FileName $_.Name -DeploymentName $(GitVersion_NuGetVersion)
    }

deploy:
- provider: Environment
  name: appveyor-nuget
  on:
    branch: master
- provider: Environment
  name: appveyor-nuget
  artifact: .\publish
  on:
    APPVEYOR_REPO_TAG: true
